FROM ubuntu:16.04 as builder

ARG user=indy
ENV HOME="/home/$user"
WORKDIR $HOME
RUN mkdir -p .local/bin .local/etc .local/lib

# Install environment
RUN apt-get update -y && \
    apt-get install -y --no-install-recommends \
        automake \
        bison \
        build-essential \
        ca-certificates \
        cmake \
        curl \
        flex \
        git \
        libbz2-dev \
        libffi-dev \
        libgflags-dev \
        libgmp-dev \
        liblz4-dev \
        liblzma-dev \
        libncurses5-dev \
        libncursesw5-dev \
        libreadline-gplv2-dev \
        libsnappy-dev \
        libsqlite3-dev \
        libssl-dev \
        libtool \
        libzmq3-dev \
        pkg-config \
        zlib1g-dev && \
    rm -rf /var/lib/apt/lists/*

ARG nacl_lib_ver=1.0.16

# Build and install libsodium library
RUN curl -o libsodium-${nacl_lib_ver}.tar.gz \
        "https://download.libsodium.org/libsodium/releases/libsodium-${nacl_lib_ver}.tar.gz" && \
    tar xzvf libsodium-${nacl_lib_ver}.tar.gz && \
    cd libsodium-${nacl_lib_ver} && \
    CFLAGS="-Os" ./configure && \
    make install && \
    cd .. && \
    cp -a /usr/local/lib/libsodium.so* "$HOME/.local/lib" && \
    rm -rf libsodium-${nacl_lib_ver}*

ARG pbc_lib_ver=0.5.14

# Build and install pbc library
RUN curl -o pbc-${pbc_lib_ver}.tar.gz \
        "https://crypto.stanford.edu/pbc/files/pbc-${pbc_lib_ver}.tar.gz" && \
    tar xzvf pbc-${pbc_lib_ver}.tar.gz && \
    cd pbc-${pbc_lib_ver} && \
    ./configure && \
    make install && \
    cd .. && \
    cp /usr/local/lib/libpbc*.so "$HOME/.local/lib" && \
    rm -rf pbc-${pbc_lib_ver}*

ARG rocksdb_lib_ver=5.13.fb

# Build and install rocksdb library
RUN mkdir rocksdb && \
    curl -o rocksdb/rocksdb.tar.gz \
        "https://codeload.github.com/facebook/rocksdb/tar.gz/${rocksdb_lib_ver}" && \
    cd rocksdb && \
    tar xzf rocksdb.tar.gz && \
    cd ./* && \
    CXXFLAGS="-flto -Os -s" PORTABLE=1 make install-shared && \
    cd $HOME && \
    cp -a /usr/local/lib/librocksdb.so* "$HOME/.local/lib" && \
    rm -rf rocksdb

# 3.5.3+ required
ARG python_version=3.5.5

# Install pyenv and python to user home directory
ENV PYENV_ROOT="$HOME/.pyenv"
ENV PATH="$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH"
RUN git clone https://github.com/pyenv/pyenv.git "$PYENV_ROOT" && \
    CFLAGS="-O2" pyenv install $python_version && \
    pyenv global $python_version && \
    find "$PYENV_ROOT" -depth \
		\( \
			\( -type d -a \( -name test -o -name tests \) \) \
			-o \
			\( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \) \
		\) -exec rm -rf '{}' + && \
	pip install --no-cache-dir --upgrade pip~=9.0.0

# set to --release for smaller, optimized library
ARG indy_build_flags=

ARG indy_sdk_url=https://codeload.github.com/bcgov/indy-sdk/tar.gz/574ca3a881d188c3fd7400d27acbe5edc4c7f666
ARG indy_crypto_url=https://codeload.github.com/hyperledger/indy-crypto/tar.gz/96c79b36c5056eade5a8e3bae418f5a733cc8d8d

ENV LIBRARY_PATH="$HOME/.local/lib:$LIBRARY_PATH"

# Install rust toolchain and indy-sdk
RUN curl -o rustup https://sh.rustup.rs && \
    chmod +x rustup && \
    ./rustup -y && \
    mkdir indy-sdk indy-crypto && \
    curl -o indy-sdk/indy-sdk.tar.gz "${indy_sdk_url}" && \
    curl -o indy-crypto/indy-crypto.tar.gz "${indy_crypto_url}" && \
    cd indy-sdk && \
    tar xzf indy-sdk.tar.gz && \
    cd */libindy-common && \
    $HOME/.cargo/bin/cargo build ${indy_build_flags} && \
    mv target/*/libindy_common.so "$HOME/.local/lib" && \
    cd ../libindy && \
    $HOME/.cargo/bin/cargo build ${indy_build_flags} && \
    mv target/*/libindy.so "$HOME/.local/lib" && \
    tar czvf python3-indy.tgz -C ../wrappers/python . && \
    pip install --no-cache-dir python3-indy.tgz && \
    cd ../cli && \
    $HOME/.cargo/bin/cargo build ${indy_build_flags} && \
    mv target/*/indy-cli "$HOME/.local/bin" && \
    cd ../samples/storage/storage-postgres && \
    $HOME/.cargo/bin/cargo build ${indy_build_flags} && \
    mv target/*/libindystrgpostgres.so "$HOME/.local/lib" && \
    cd $HOME/indy-crypto && \
    tar xzf indy-crypto.tar.gz && \
    cd */libindy-crypto && \
    $HOME/.cargo/bin/cargo build ${indy_build_flags} && \
    mv target/*/libindy_crypto.so "$HOME/.local/lib" && \
    tar czvf indy-crypto.tgz -C ../wrappers/python . && \
    pip install --no-cache-dir indy-crypto.tgz && \
    cd $HOME && \
    rm -rf .cargo .multirust .profile .rustup rustup indy-sdk indy-crypto

# Install indy python libraries and other dependencies
ADD requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

